==================================================
Assignment name: filter
Expected files: filter.c
Allowed functions: read, write, strlen, memmem, memmove, malloc, calloc,
realloc, free, printf, fprintf, stdout, stderr, perror
--------------------------------------------------------------------------------

Escreva um programa que receba um e apenas um argumento. O seu programa irá então ler a partir do stdin e escrever todo o conteúdo lido no stdout, exceto que cada ocorrência de s deve ser substituída por ‘*’ (tantas quantas o comprimento de s). O seu programa será testado com tamanhos de buffer aleatórios, utilizando uma função de leitura personalizada. Portanto, o buffer definido no seu programa será preenchido com um número diferente de caracteres a cada nova chamada.



Exemplos:

./filter bonjour
will behave in the same way as:
sed 's/bonjour/*******/g'

./filter abc
will behave in the same way as:
sed's/abc/***/g'

More generally your program must be the equivalent of the shell script filter.sh
present in this directory (you can compare your program with it).

In case of error during a read or a malloc, you must write "Error: " followed by
the error message in stderr and return 1.

If the program is called without arguments or with an empty argument or with multiple
arguments, it must return 1.

For example this should work:

$> echo 'abcdefaaaabcdeabcabcdabc' | ./filter abc | cat -e
***defaaa***de******d***$
$> echo 'ababcabababc' | ./filter ababc | cat -e
*****ab*****$
$>

NOTES:
memmem includes:
                #define _GNU_SOURCE
                            #include <string.h>

perror includes:
                #include <errno.h>

read includes:
                #include <fcntl.h>
